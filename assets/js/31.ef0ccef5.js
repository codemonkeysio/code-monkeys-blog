(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{542:function(t,s,a){"use strict";a.r(s);var e=a(18),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey},scopedSlots:t._u([{key:"header",fn:function(){return[a("h1",{attrs:{id:"valid-anagram"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#valid-anagram"}},[t._v("#")]),t._v(" Valid Anagram")])]},proxy:!0}])},[a("h2",{attrs:{id:"links"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[t._v("#")]),t._v(" Links")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://leetcode.com/problems/valid-anagram/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Valid Anagram "),a("div",{staticClass:"emoji-wrap"},[t._v("Problem"),a("span",[t._v("Â ðŸ’¡")])])])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/codemonkeysio/LeetCode",target:"_blank",rel:"noopener noreferrer"}},[t._v("Get the code & notes on "),a("div",{staticClass:"emoji-wrap"},[t._v("GitHub"),a("span",[t._v("Â ðŸ’»")])])])]),t._v(" "),a("h2",{attrs:{id:"problem-description"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#problem-description"}},[t._v("#")]),t._v(" Problem Description")]),t._v(" "),a("p",[t._v("Given two strings "),a("span",{staticClass:"post-term-two"},[t._v("s")]),t._v(" and "),a("span",{staticClass:"post-term-three"},[t._v("t")]),t._v(", return "),a("span",{staticClass:"post-term-one"},[t._v("true")]),t._v("\nif "),a("span",{staticClass:"post-term-three"},[t._v("t")]),t._v(" is an "),a("span",{staticClass:"post-term-one"},[t._v("anagram")]),t._v(" of "),a("span",{staticClass:"post-term-two"},[t._v("s")]),t._v(", and "),a("span",{staticClass:"post-term-one"},[t._v("false")]),t._v(" otherwise.")]),t._v(" "),a("h2",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),a("p",[t._v("Ex 1) Input: "),a("span",{staticClass:"post-term-two"},[t._v("s")]),t._v(' = "anagram", '),a("span",{staticClass:"post-term-three"},[t._v("t")]),t._v(' = "nagaram" '),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mstyle",[a("mjx-mspace",{staticStyle:{width:"0.278em"}})],1),a("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[a("mjx-c",{attrs:{c:"27F9"}})],1),a("mjx-mstyle",{attrs:{space:"4"}},[a("mjx-mspace",{staticStyle:{width:"0.278em"}})],1)],1)],1),t._v(" Output: "),a("span",{staticClass:"post-term-one"},[t._v("true")])],1),t._v(" "),a("p",[t._v("Ex 2) Input: "),a("span",{staticClass:"post-term-two"},[t._v("s")]),t._v(' = "rat", '),a("span",{staticClass:"post-term-three"},[t._v("t")]),t._v(' = "car" '),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mstyle",[a("mjx-mspace",{staticStyle:{width:"0.278em"}})],1),a("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[a("mjx-c",{attrs:{c:"27F9"}})],1),a("mjx-mstyle",{attrs:{space:"4"}},[a("mjx-mspace",{staticStyle:{width:"0.278em"}})],1)],1)],1),t._v(" Output: "),a("span",{staticClass:"post-term-one"},[t._v("false")])],1),t._v(" "),a("h2",{attrs:{id:"constraints"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constraints"}},[t._v("#")]),t._v(" Constraints")]),t._v(" "),a("ul",[a("li",[a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mn",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"1"}})],1),a("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[a("mjx-c",{attrs:{c:"2264"}})],1),a("mjx-mstyle",{staticStyle:{color:"#33eb61"},attrs:{space:"4"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"s"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"."}})],1),a("mjx-mi",{staticClass:"mjx-i",attrs:{space:"2"}},[a("mjx-c",{attrs:{c:"l"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"e"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"g"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"t"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"h"}})],1)],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:","}})],1),a("mjx-mstyle",{staticStyle:{color:"#33ebeb"},attrs:{space:"2"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"t"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"."}})],1),a("mjx-mi",{staticClass:"mjx-i",attrs:{space:"2"}},[a("mjx-c",{attrs:{c:"l"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"e"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"g"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"t"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"h"}})],1)],1),a("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[a("mjx-c",{attrs:{c:"2264"}})],1),a("mjx-mn",{staticClass:"mjx-n",attrs:{space:"4"}},[a("mjx-c",{attrs:{c:"5"}})],1),a("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[a("mjx-c",{attrs:{c:"2217"}})],1),a("mjx-msup",[a("mjx-mn",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"1"}}),a("mjx-c",{attrs:{c:"0"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"0.393em"}},[a("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[a("mjx-c",{attrs:{c:"4"}})],1)],1)],1)],1)],1)],1),t._v(" "),a("li",[a("span",{staticClass:"post-term-two"},[t._v("s")]),t._v(" and "),a("span",{staticClass:"post-term-three"},[t._v("t")]),t._v(" consist of lowercase English letters")])]),t._v(" "),a("h2",{attrs:{id:"what-is-an-anagram"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-an-anagram"}},[t._v("#")]),t._v(" What is an Anagram?")]),t._v(" "),a("ul",[a("li",[t._v("A word or a phrase that is formed by "),a("span",{staticClass:"post-term-one"},[t._v("rearranging")]),t._v(" the letters of a different word or phrase typically using all of the original letters exactly "),a("span",{staticClass:"post-term-one"},[t._v("once")]),t._v(".")])]),t._v(" "),a("h2",{attrs:{id:"assumptions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#assumptions"}},[t._v("#")]),t._v(" Assumptions")]),t._v(" "),a("ul",[a("li",[t._v("To clarify the provided constraints we're also assuming "),a("span",{staticClass:"post-term-two"},[t._v("s")]),t._v(" and "),a("span",{staticClass:"post-term-three"},[t._v("t")]),t._v(" contain no spaces, and we're only able to use each letter "),a("span",{staticClass:"post-term-one"},[t._v("once")]),t._v(".")])]),t._v(" "),a("h2",{attrs:{id:"how-to-check-if-t-is-an-anagram-of-s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-check-if-t-is-an-anagram-of-s"}},[t._v("#")]),t._v(" How to Check if t is an Anagram of s?")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Since we're assuming we can only use each letter in "),a("span",{staticClass:"post-term-two"},[t._v("s")]),t._v(" and "),a("span",{staticClass:"post-term-three"},[t._v("t")]),t._v(" once, then for "),a("span",{staticClass:"post-term-three"},[t._v("t")]),t._v(" to be an anagram of "),a("span",{staticClass:"post-term-two"},[t._v("s")]),t._v(" they must be the same length.")])]),t._v(" "),a("li",[a("p",[t._v("We can first check that "),a("span",{staticClass:"post-term-two"},[t._v("s")]),t._v(" and "),a("span",{staticClass:"post-term-three"},[t._v("t")]),t._v(" are the same length, and if they aren't we can return false.")])]),t._v(" "),a("li",[a("p",[t._v("Now, if "),a("span",{staticClass:"post-term-two"},[t._v("s")]),t._v(" and "),a("span",{staticClass:"post-term-three"},[t._v("t")]),t._v(" are the same length, they must also contain the same letters.")])])]),t._v(" "),a("h3",{attrs:{id:"how-to-check-if-s-and-t-contain-the-same-letters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-check-if-s-and-t-contain-the-same-letters"}},[t._v("#")]),t._v(" How to Check if s and t contain the same letters?")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("We're given "),a("span",{staticClass:"post-term-two"},[t._v("s")]),t._v(" and "),a("span",{staticClass:"post-term-three"},[t._v("t")]),t._v(" as strings, but we care about being able to examine each character in the strings. So, what we can do is create an array of characters for "),a("span",{staticClass:"post-term-two"},[t._v("s")]),t._v(" and "),a("span",{staticClass:"post-term-three"},[t._v("t")]),t._v(".")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Ex 1) "),a("span",{staticClass:"post-term-two"},[t._v("s")]),t._v(' = "anagram" '),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mstyle",[a("mjx-mspace",{staticStyle:{width:"0.278em"}})],1),a("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[a("mjx-c",{attrs:{c:"27F9"}})],1),a("mjx-mstyle",{attrs:{space:"4"}},[a("mjx-mspace",{staticStyle:{width:"0.278em"}})],1)],1)],1),t._v(" "),a("span",{staticClass:"post-term-two"},[t._v("sArray")]),t._v(' = ["a", "n", "a", "g", "r", "a", "m"]'),a("br"),a("span",{staticClass:"post-term-three post-example"},[t._v("t")]),t._v(' = "nagaram" '),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mstyle",[a("mjx-mspace",{staticStyle:{width:"0.278em"}})],1),a("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[a("mjx-c",{attrs:{c:"27F9"}})],1),a("mjx-mstyle",{attrs:{space:"4"}},[a("mjx-mspace",{staticStyle:{width:"0.278em"}})],1)],1)],1),t._v(" "),a("span",{staticClass:"post-term-three"},[t._v("tArray")]),t._v(' = ["n", "a", "g", "a", "r", "a", "m"]')],1)]),t._v(" "),a("li",[a("p",[t._v("Ex 2) "),a("span",{staticClass:"post-term-two"},[t._v("s")]),t._v(' = "rat" '),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mstyle",[a("mjx-mspace",{staticStyle:{width:"0.278em"}})],1),a("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[a("mjx-c",{attrs:{c:"27F9"}})],1),a("mjx-mstyle",{attrs:{space:"4"}},[a("mjx-mspace",{staticStyle:{width:"0.278em"}})],1)],1)],1),t._v(" "),a("span",{staticClass:"post-term-two"},[t._v("sArray")]),t._v(' = ["r", "a", "t"]'),a("br"),a("span",{staticClass:"post-term-three post-example"},[t._v("t")]),t._v(' = "car" '),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mstyle",[a("mjx-mspace",{staticStyle:{width:"0.278em"}})],1),a("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[a("mjx-c",{attrs:{c:"27F9"}})],1),a("mjx-mstyle",{attrs:{space:"4"}},[a("mjx-mspace",{staticStyle:{width:"0.278em"}})],1)],1)],1),t._v(" "),a("span",{staticClass:"post-term-three"},[t._v("tArray")]),t._v(' = ["c", "a", "r"]')],1)])])]),t._v(" "),a("li",[a("p",[t._v("We can use the "),a("span",{staticClass:"post-term-one"},[t._v("split()")]),t._v(" method, and pass it a pattern of "),a("span",{staticClass:"post-term-one"},[t._v('""')]),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("This tells "),a("span",{staticClass:"post-term-one"},[t._v("split()")]),t._v(" to split our strings into substrings where a "),a("span",{staticClass:"post-term-one"},[t._v('""')]),t._v(" pattern occurs which is between each character in our strings.")])]),t._v(" "),a("li",[a("p",[a("span",{staticClass:"post-term-one"},[t._v("split()")]),t._v(" will then return an array of these substrings.")])]),t._v(" "),a("li",[a("p",[t._v("Now, we need a way to compare the letters of "),a("span",{staticClass:"post-term-two"},[t._v("sArray")]),t._v(" with the letters of "),a("span",{staticClass:"post-term-three"},[t._v("tArray")]),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("We could take the first value of "),a("span",{staticClass:"post-term-two"},[t._v("sArray")]),t._v(" and compare it with each value of "),a("span",{staticClass:"post-term-three"},[t._v("tArray")]),t._v(". Then break when the letters are the same, and keep track of which index the match occurred at. This will allow us to not use the value at the matched index again on the next comparison.")])]),t._v(" "),a("li",[a("p",[t._v("A simplier solution though is to realize that we can sort our arrays, and if "),a("span",{staticClass:"post-term-three"},[t._v("t")]),t._v(" is an anagram of "),a("span",{staticClass:"post-term-two"},[t._v("s")]),t._v(", then our arrays will have all the same letters in the same order.")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Ex 1) "),a("span",{staticClass:"post-term-two"},[t._v("sArray.sort()")]),t._v(' = ["a", "a", "a", "g", "m", "n", "r"]'),a("br"),a("span",{staticClass:"post-term-three post-example"},[t._v("tArray.sort()")]),t._v(' = ["a", "a", "a", "g", "m", "n", "r"]')])]),t._v(" "),a("li",[a("p",[t._v("Ex 2) "),a("span",{staticClass:"post-term-two"},[t._v("sArray.sort()")]),t._v(' = ["a", "r", "t"]'),a("br"),a("span",{staticClass:"post-term-three post-example"},[t._v("tArray.sort()")]),t._v(' = ["a", "c", "r"]')])])])]),t._v(" "),a("li",[a("p",[t._v("Then we can check if the letters in the arrays are equal by comparing each value at index "),a("span",{staticClass:"post-term-one"},[t._v("i")]),t._v(" of "),a("span",{staticClass:"post-term-two"},[t._v("sArray")]),t._v(" with each value at index "),a("span",{staticClass:"post-term-one"},[t._v("i")]),t._v(" of "),a("span",{staticClass:"post-term-three"},[t._v("tArray")]),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("To do this we can loop over the length of one of the arrays, and if the values of our arrays at index "),a("span",{staticClass:"post-term-one"},[t._v("i")]),t._v(" are "),a("span",{staticClass:"post-term-one"},[t._v("not")]),t._v(" equal, then we can break the loop by returning false.")])]),t._v(" "),a("li",[a("p",[t._v("If the arrays are "),a("span",{staticClass:"post-term-one"},[t._v("equal")]),t._v(", then we'll loop over the entire length of our array and return true.")])])]),t._v(" "),a("h2",{attrs:{id:"implementation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#implementation"}},[t._v("#")]),t._v(" Implementation")]),t._v(" "),a("code-fence",{attrs:{lang:"js",heading:"Valid Anagram"}},[a("pre",{attrs:{"vue-slot":"code"}},[t._v("var isAnagram = function(s, t) {\n  if (s.length === t.length) {\n    let sArray = s.split('');\n    let tArray = t.split('');\n\n    sArray.sort();\n    tArray.sort();\n\n    for (let i = 0; i < s.length; i++) {\n      if (sArray[i] !== tArray[i]) {\n        return false;\n      }\n    }\n\n    return true;\n\n  } else {\n    return false;\n  }\n};\n\nlet s = 'rat';\nlet t = 'car';\n\nconsole.log(isAnagram(s, t));\n\n")])])],1)}),[],!1,null,null,null);s.default=r.exports}}]);